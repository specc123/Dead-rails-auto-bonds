local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Create HUD
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 200)
frame.Position = UDim2.new(0.05, 0, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 2
frame.Parent = screenGui
frame.Active = true
frame.Draggable = true -- Movable HUD

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0.2, 0)
title.BackgroundTransparency = 1
title.Text = "Teleport & Collect 'Bond'"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextScaled = true
title.Parent = frame

local teleportButton = Instance.new("TextButton")
teleportButton.Size = UDim2.new(1, 0, 0.4, 0)
teleportButton.Position = UDim2.new(0, 0, 0.6, 0)
teleportButton.Text = "Teleport & Collect"
teleportButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportButton.Font = Enum.Font.SourceSansBold
teleportButton.TextScaled = true
teleportButton.Parent = frame

-- Function to find all "Bond" objects
local function findBonds()
    local bonds = {}
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") and obj.Name == "Bond" then
            table.insert(bonds, obj)
        end
    end
    return bonds
end

-- Function to teleport smoothly (anti-cheat bypass)
local function teleportBypass(targetPosition)
    humanoidRootPart:SetNetworkOwner(player) -- Reduce server checks
    local startPosition = humanoidRootPart.Position
    local duration = 0.5
    local steps = 30

    for i = 1, steps do
        local alpha = i / steps
        humanoidRootPart.CFrame = CFrame.new(startPosition:Lerp(targetPosition, alpha))
        humanoidRootPart.Velocity = Vector3.new(0, 0, 0) 
        task.wait(duration / steps)
    end

    humanoidRootPart.Velocity = Vector3.new(0, 2, 0) -- Fake movement
end

-- Function to try collecting the "Bond"
local function collectBond(bond)
    if bond and bond.Parent then
        local success = false
        
        -- Try firing any ProximityPrompt inside the Bond
        for _, child in pairs(bond:GetChildren()) do
            if child:IsA("ProximityPrompt") then
                fireproximityprompt(child) -- Fire the prompt
                success = true
                break
            end
        end

        -- Try triggering RemoteEvent if one exists
        if not success then
            for _, child in pairs(bond:GetChildren()) do
                if child:IsA("RemoteEvent") then
                    child:FireServer() -- Fire the event
                    success = true
                    break
                end
            end
        end

        -- Delete if collection didn't work
        if not success then
            bond:Destroy()
        end
    end
end

-- Button function: Teleports to and collects the closest "Bond"
teleportButton.MouseButton1Click:Connect(function()
    local bonds = findBonds()
    if #bonds == 0 then
        title.Text = "No 'Bond' Objects Found!"
        return
    end

    -- Find closest Bond
    local closestBond = nil
    local minDistance = math.huge
    for _, bond in pairs(bonds) do
        local distance = (bond.Position - humanoidRootPart.Position).Magnitude
        if distance < minDistance then
            minDistance = distance
            closestBond = bond
        end
    end

    if closestBond then
        teleportBypass(closestBond.Position + Vector3.new(0, 5, 0)) -- Teleport above the object
        task.wait(0.3) -- Short delay before collecting
        collectBond(closestBond)
    end
end)
